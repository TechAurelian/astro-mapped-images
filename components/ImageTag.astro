---
/**
 * @license
 * Copyright (c) TechAurelian {@link https://techaurelian.com}
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

import type { MappedImage } from './../types';
import { getImageData, getImageUrl } from './../utils/utils';

type Props = MappedImage;

const { alt, class: className, height, src, title, width } = Astro.props;

// Validate the src prop
if (!src) throw new Error('ImageTag requires a src prop for the image src attribute.');

// Validate the alt prop
if (alt === null || alt === undefined) {
  throw new Error(`ImageTag requires an alt prop for the image alt text. Use an empty string if the image is decorative.\nsrc: ${src}`);
}

const localImageMap = globalThis.astroMappedImagesOptions.localImageMap;
const externalImageMap = globalThis.astroMappedImagesOptions.externalImageMap;

// Get the image width and height from props or from the corresponding image map
const { width: mWidth, height: mHeight } = getImageData(src, localImageMap, externalImageMap);
const cWidth = width ?? mWidth;
const cHeight = height ?? mHeight;

// Get the image url by replacing the local:// or external:// prefix with the correct images directory path
const cSrc = getImageUrl(src);
---

<img class={className} src={cSrc} width={cWidth} height={`${cHeight}`} alt={alt} title={title} />
